quarkus.banner.path=explorviz-banner.txt
%dev.quarkus.http.port=8087
%dev.quarkus.http.host = 0.0.0.0

# Kafka
quarkus.kafka.devservices.enabled=false

#kafka.bootstrap.servers = kafka:9092
#%dev.kafka.bootstrap.servers = localhost:9091

# Kafka (Streams) metrics
# quarkus.micrometer.binder.kafka.enabled=true

# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
%test.kafka-streams.state.dir=target/data/kafka-data/stores

# Kafka Streams
quarkus.kafka-streams.bootstrap-servers=kafka:9092
%dev.quarkus.kafka-streams.bootstrap-servers=localhost:9091
%test.quarkus.kafka-streams.bootstrap-servers=""

quarkus.kafka-streams.application-id=adapter-service
quarkus.kafka-streams.topics=cluster-dump-spans,explorviz-spans-structure,explorviz-spans-dynamic,token-events

explorviz.kafka-streams.topics.in=cluster-dump-spans
explorviz.kafka-streams.topics.in.tokens=token-events
explorviz.kafka-streams.topics.out.structure=explorviz-spans-structure
explorviz.kafka-streams.topics.out.dynamic=explorviz-spans-dynamic
explorviz.kafka-streams.topics.out.tokens-table=token-events-table

explorviz.validate.token-existence=false
%dev.explorviz.validate.token-existence=false
%test.explorviz.validate.token-existence=false

quarkus.kafka-streams.schema-registry-url=http://schemaregistry:8081
%dev.quarkus.kafka-streams.schema-registry-url=http://localhost:8081

# ExplorViz Logging Level
quarkus.log.level=INFO
quarkus.log.min-level=TRACE
quarkus.log.category."net.explorviz".level=${EXPLORVIZ_LOG_LVL:INFO}
%dev.quarkus.log.category."net.explorviz".level=${EXPLORVIZ_LOG_LVL:DEBUG}
explorviz.log.span.interval=${EXPLORVIZ_LOG_SPAN_INTERVAL:20s}

# Jib Image Build
quarkus.container-image.group=explorviz
quarkus.container-image.name=adapter-service-jvm
quarkus.container-image.tag=latest
quarkus.jib.base-jvm-image=openjdk:11-jre@sha256:e1ca9722d82adcf57306b8c98b2cbe8faf429a97a4510c817f26ee8fba925fdf

# quarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/ubi-minimal:8.3
# Error docker: Error response from daemon: OCI runtime create failed: container_linux.go:349: starting container process caused "exec: \"java\": executable file not found in $PATH": unknown.
