image: ghcr.io/graalvm/graalvm-ce:java11-21.0.0

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - code-analysis
  - build
  - test
  - visualize
  - deploy

build:
  stage: build
  tags:
    - exec-docker
  script: ./gradlew --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

unit-test:
  stage: test
  tags:
    - exec-docker
  script: ./gradlew test jacocoTestReport
  artifacts:
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml
  
coverage:
  # Must be in a stage later than unit-test's stage.
  # The `visualize` stage does not exist by default.
  # Please define it first, or chose an existing stage like `deploy`.
  stage: visualize
  tags:
    - exec-docker
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    # convert report from jacoco to cobertura
    - 'python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml src/main/java > build/cobertura.xml'
    # read the <source></source> tag and prepend the path to every filename attribute
    - 'python /opt/source2filename.py build/cobertura.xml'
  needs: ["unit-test"]
  dependencies:
    - unit-test
  artifacts:
    reports:
      cobertura: build/cobertura.xml

pmd:
  stage: code-analysis
  tags:
    - exec-docker
  script: ./gradlew pmdMain

checkstyle:
  stage: code-analysis
  tags:
    - exec-docker
  script: ./gradlew checkstyleMain

push-dockerhub-native:
  stage: deploy
  only:
    - schedules
  before_script:
    - gu install native-image
  tags:
    - exec-docker
  script: 
    - ./gradlew clean assemble -Dquarkus.package.type=native -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.name=adapter-service-native -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA -Dquarkus.native.additional-build-args="--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator\\,org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin" -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD

push-dockerhub:
  stage: deploy
  only:
    - master
  except:
    - schedules
  tags:
    - exec-docker
  script: 
    - ./gradlew clean assemble -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD